team_salaries <- arrange(summarise(group_by(dat, team),
total_salary = sum(salary/1000000),
average_salary = mean(salary/1000000),
median_salary = median(salary/1000000)
), desc(total_salary))
team_salaries <- as_tibble(team_salaries)
team_salaries
team_salaries <- as.data.frame(team_salaries)
team_salaries
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity', color = "light grey") + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary", caption = "Red line represents NBA average total salary per team") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 2)
team_points <- arrange(summarize(group_by(dat, team),
total_points = sum(points),
mean_points = mean(points),
median_points = median(points)), desc(total_points))
as.data.frame(team_points)
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + coord_flip() + geom_bar(stat = 'identity', color = "light grey") + ylab("Total Team Points") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Points", caption = "Red line represents NBA average total points per team") + theme_classic() + geom_hline(aes(yintercept = mean(total_points)), color = "red", size = 2)
points_salary <- inner_join(team_points, team_salaries)
summary(points_salary)
points_salary <- mutate(points_salary, cost_points = (total_salary*1000000)/total_points)
summary(points_salary$cost_points)
ggplot(points_salary, aes(reorder(x = team, cost_points), y = cost_points)) + geom_point(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = total_points, y = total_salary*1000000)) + geom_point(aes(color = points_salary$team)) + geom_smooth(method = 'lm', formula = y~x, se = FALSE) + labs(title = "Cost per Point for NBA teams", x = "Total Points", y = "Total Salary", caption = "blue line represents the expected cost per point based upon the data set.")
# current directory
pwd
gwd()
write.csv(
x = mtcars,
)
write.csv(
x = mtcars,
file = 'stat133-lab05/exports.csv')
write.csv(
x = (mtcars[c('mpg', 'disp', 'hp')]),
file = /c/Users/Fajnor/stat133-lab05/exports/dataset.csv
)
write.csv(
+     x = (mtcars[c('mpg', 'disp', 'hp')]),
+     file = '/c/Users/Fajnor/stat133-lab05/exports/dataset.csv'
write.csv(
x = (mtcars[c('mpg', 'disp', 'hp')]),
'file = /c/Users/Fajnor/stat133-lab05/exports/dataset.csv')
write.csv(
+     x = (mtcars[c('mpg', 'disp', 'hp')]),
write.csv(
x = (mtcars[c('mpg', 'disp', 'hp')]),
file = '/c/Users/Fajnor/stat133-lab05/exports/dataset.csv')
data(mtcars)
write.csv(
x = (mtcars[c('mpg', 'disp', 'hp')]),
file = '/c/Users/Fajnor/stat133-lab05/exports/dataset.csv')
data(mtcars)
write.csv(
x = (mtcars[c('mpg', 'disp', 'hp')]),
file = 'C:/Users/Fajnor/stat133-lab05/exports/dataset.csv')
mtcars.str <- str(mtcars)
write.csv(
x = mtcars.str,
file = 'C:/Users/Fajnor/stat133-lab05/exports/mtcars-structure.txt')
summary_mtcars <- summary(mtcars)
write.csv(
x = summary_mtcars,
file = 'C:/Users/Fajnor/stat133-lab05/exports/summary-mtcars.txt')
plot1 <- plot(mtcars, x=mtcars$mpg, y=mtcars$wt)
plot1 <- plot(x=mtcars$mpg, y=mtcars$wt)
png(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-wt.png", width = 480, height = 480)
png(plot(x=mtcars$mpg, y=mtcars$wt), filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-wt.png", width = 480, height = 480)
png(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-wt.png", width = 480, height = 480)
plot1
dev.off()
png(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-wt.png", width = 480, height = 480)
plot(x=mtcars$mpg, y=mtcars$wt)
dev.off()
png(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-wt.png", width = 480, height = 480)
plot(x=mtcars$mpg, y=mtcars$wt)
dev.off()
png(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-wt.png", width = 480, height = 480, res = 100)
plot(x=mtcars$hp, y=mtcars$wt)
dev.off()
png(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-hp-wt.png", width = 480, height = 480, res = 100)
plot(x=mtcars$hp, y=mtcars$wt)
dev.off()
png(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-wt.png", width = 480, height = 480)
plot(x=mtcars$mpg, y=mtcars$wt)
dev.off()
jpeg(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-histogram-mpg.jpeg", width = 480, height = 480)
hist(x=mtcars$mpg)
dev.off()
jpeg(filename = "C:/Users/Fajnor/stat133-lab05/exports/histogram-mpg.jpeg", width = 480, height = 480)
hist(x=mtcars$mpg)
dev.off()
pdf(filename = "C:/Users/Fajnor/stat133-lab05/exports/histogram-mpg.pdf", width = 7, height = 5)
pdf(file = "C:/Users/Fajnor/stat133-lab05/exports/histogram-mpg.pdf", width = 7, height = 5)
hist(x=mtcars$mpg)
dev.off()
library(ggplot2)
ggplot(mtcars, aes(x = mgp, y = disp))
ggplot(mtcars, aes(x = mpg, y = disp))
ggplot(mtcars, aes(x = mpg, y = disp)) + geom_point()
ggplot(mtcars, aes(x = mpg, y = disp)) + geom_point()
ggsave(filename = 'C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-disp.pdf', last_plot())
Igoudala <- read.csv("./data/andre-iguodala.csv", stringsAsFactors = FALSE)
Igoudala <- read.csv("../data/andre-iguodala.csv", stringsAsFactors = FALSE)
Igoudala <- read.csv("data/andre-iguodala.csv", stringsAsFactors = FALSE)
Igoudala <- read.csv("../data/andre-iguodala.csv", stringsAsFactors = FALSE)
Igoudala <- read.csv("../data/andre-iguodala.csv", stringsAsFactors = FALSE)
Igoudala <- read.csv("../data/andre-iguodala.csv", stringsAsFactors = FALSE)
Igoudala <- read.csv("~/Desktop/workout01/data/andre-iguodala.csv", stringsAsFactors = FALSE)
Igoudala <- read.csv(file = "../data/andre-iguodala.csv", stringsAsFactors = FALSE)
source('C:/Users/Fajnor/Desktop/workout01/code/workout01-Jacob-Fajnor.R')
x <- 1:50
x <- 1:50
x[seq(1, 5)]
x <- 1:50
x[seq(1, 5, 5)]
x <- 1:50
x[seq(from = 1, to = 50, by = 5)]
help(load)
1 == TRUE
0 == FALSE
x<- 4
x > 5
x<- 4
x > 5
y <- c(1, 4, 9, 16, 25)
z <- sqrt(y)
y <- c(1, 4, 9, 16, 25)
z <- sqrt(y)
x <- 1:50
x[seq(from = 1, to = 50, by = 5)]
x[seq(from = tail(x), to = (tail(x)-5), by -1)]
tail(x)
x[(tail(x) - 5):tail(x)]
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",")
origin <- 'http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data'
destination <- 'abalone.data'
download.file(origin, destination)
abalone <- read.table("abalone.data", sep = ",")
head(abalone)
tail(abalone)
str(abalone, vec.len = 1)
col.names <- c("sex", "length", "diameter", "height", "whole", "shucked", "Viscera", "shell", "rings")
column_types <- c("character", "real", "real", "real", "real", "real", "real", "real", "integer")
abalone <- read.table("abalone.data", sep = ",", colClasses = column_types, col.names = col.names)
str(abalone)
abalone2 <- read.csv(url, header = FALSE)
abalone10 <- read.csv(url, header = FALSE, col.names = col.names, colClasses = column_types, nrows = 10)
str(abalone10)
abalone20 <- read.csv(url, header = FALSE, col.names = col.names, colClasses = column_types, nrows = 10, skip = 10)
str(abalone20)
col_types.NULL <- c("character", "NULL", "real", "real", "real", "real", "real", "real", "integer")
abalone10.NULL <- read.csv(url, header = FALSE, col.names = col.names, colClasses = col_types.NULL, nrows = 10)
str(abalone10.NULL)
# When we place Null as a column class we get loose that entire column of data (as seen above the NULL column was in place of "length").
str(abalone)
summary(abalone)
head(abalone)
tail(abalone)
dim(abalone)
names(abalone)
colnames(abalone)
nrow(abalone)
ncol(abalone)
summary(abalone)
apply(abalone, 2, sd)
three_rows <- abalone[1:3, ]
three_rows
gt <- abalone[abalone$length > .6, ]
gt
length_diam <- abalone[ , c('length', 'diameter')]
head(length_diam)
first_5 <- abalone[1:5, ]
first_5
by_5 <- abalone[seq(5, 50, by = 5), ]
by_5
last_5 <- abalone[seq(4177, 4172, by = (-1)), ]
last_5
height14 <- abalone[abalone$height < .14, ]
as.data.frame(height14)
dim(height14)
infant <- abalone[abalone$sex == 'I', ]
as.data.frame(infant)
dim(infant)
male_female <- abalone[!abalone$sex == 'I', ]
as.data.frame(male_female)
dim(male_female)
rings_25 <- as.data.frame(abalone[abalone$rings > 25, c(1, 9)])
rings_25
as.data.frame(infant[infant$rings > 3 | infant$rings < 6, c(1, 9, 3)])
abies <- abalone[abalone$sex == "I", c('length', 'height', 'diameter')]
abies$Ht_len <- abies$height/abies$length
abies2 <- abies[order(abies$length, decreasing = T), ]
abies$whole <- abalone[abalone$sex == 'I', 'whole']
abies$shucked <- abalone[abalone$sex == 'I', 'shucked']
abies$product <- abies$whole * abies$shucked
abies3 <- abies
abies3$log_height <- log(abies3$height)
abies3$log_length <- log(abies3$length)
abalone_height12 <- abalone[abalone$height < .12, ]
abalone_height12[order(abalone_height12$height, decreasing = F), ]
plot(abalone$height)
abalone$SexF <- factor(abalone$sex)
plot(abalone$SexF)
plot(abalone$height, abalone$length)
abalone.plot <- abalone[ ,c(4, 2)]
plot(abalone.plot)
abalone.plot2 <- abalone[ ,c(4, 2, 3)]
plot(abalone.plot2)
abalone.plot3 <- abalone[ ,c(2, 10)]
plot(abalone.plot3)
abalone.plot4 <- abalone[ ,c(10, 2)]
plot(abalone.plot4)
plot(abalone$length, abalone$height, col = "green", xlab = 'height', ylab = 'length', main = "Height vs. Length")
load(dyplr)
library(dyplr)
install.packages("dyplr")
library(dplyr)
View(abalone)
filter(abalone, sex = F)
filter(abalone, sex = "F")
View(abalone)
filter(abalone, sex == "F")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library(dplyr)
data <- mtcars
data %>% group_by(am) %>% summarise(mean(mgp))
data %>% group_by(am) %>% summarise(mean(mpg))
data %>% arrange(desc(cyl), mpg)
update.packages(ask = FALSE, checkBuilt = TRUE)
github <- 'https://github.com/ucb-stat133/stat133-hws/'
repo <- 'raw/master/data/nba2018-players.csv'
datafile <- paste0(github, repo)
datafile
data.types <- c("character", "factor", "factor", "integer", "integer", "integer", "integer", "character", "double", "integer", "integer", "integer", "integer", "integer", "integer")
read.csv(datafile, header = TRUE, colClasses = data.types)
github <- 'https://github.com/ucb-stat133/stat133-hws/'
repo <- 'raw/master/data/nba2018-players.csv'
datafile <- paste0(github, repo)
data.types <- c("character", "factor", "factor", "integer", "integer", "integer", "integer", "character", "double", "integer", "integer", "integer", "integer", "integer", "integer")
data <- read.csv(datafile, header = TRUE, colClasses = data.types)
summary(data$salary)
summary(data$salary)
hist(data$salary)
data$salary2 <- data$salary / 1000000
hist(data$salary2)
data$log.salary2 <- log(data$salary2)
low <- data[data$log.salary2 < -3]
data$log.salary2 <- log(data$salary2)
low <- data[data$log.salary2 < -3]
low <- data[data$log.salary2 < (-3)]
low <- data$log.salary2[data$log.salary2 < (-3)]
low <- data[data$log.salary2 < (-3), ]
low <- data$log.salary2[data$log.salary2 < (-3)]
length(low)
low <- data[data$log.salary2 < (-3), ]
low <- data[[data$log.salary2 < (-3)]]
low <- data[[data$log.salary2 < (-3), ]]
low <- data$log.salary2[data$log.salary2 < (-3)]
low2 <- data[data$log.salary2 < (-3), ]
nba <- data[data$log.salary2 != low, ]
data$low <- data$log.salary2[data$log.salary2 < (-3)]
nba <- data[!data$low != T, ]
nba <- data[!data$log.salary2 != low, ]
data$low <- ifselse(data$log.salary2 < (-3), T, F)
data$low <- ifelse(data$log.salary2 < (-3), T, F)
data$low <- ifelse(data$log.salary2 < (-3), T, F)
nba <- data[data$low == FALSE, ]
View(nba)
View(nba)
nba$points <- ifelse(nba$points = 0, + .1)
nba$points <- ifelse(nba$points == 0, + .1)
nba$points <- ifelse(nba$points == 0, + .1, +0)
View(nba)
View(nba)
summary(data$salary)
hist(data$salary)
data$salary2 <- data$salary / 1000000
hist(data$salary2)
data$log.salary2 <- log(data$salary2)
low <- data$log.salary2[data$log.salary2 < (-3)]
length(low)
low2 <- data[data$log.salary2 < (-3), ]
data$low <- ifelse(data$log.salary2 < (-3), T, F)
nba <- data[data$low == FALSE, ]
nba$points <- ifelse(nba$points == 0, + .1, NA)
View(nba)
View(nba)
nba <- data[data$low == FALSE, ]
nba$points <- ifelse(nba$points == 0, .1, nba$points)
View(nba)
View(nba)
View(data)
View(data)
summary(data$salary)
hist(data$salary)
data$salary2 <- data$salary / 1000000
hist(data$salary2)
data$log.salary2 <- log(data$salary2)
low <- data$log.salary2[data$log.salary2 < (-3)]
length(low)
low2 <- data[data$log.salary2 < (-3), ]
data$low <- ifelse(data$log.salary2 < (-3), T, F)
nba <- data[data$low == FALSE, ]
nba$points[nba$points == 0] <- nba$points[nba$points == 0] + .1
View(low2)
View(low2)
View(nba)
library(gridExtra)
gsw_shotcharts <- grid.arrange(curry_shot_chart,
thompson_shot_chart,
durant_shot_chart,
green_shot_chart,
iguodala_shot_chart,
nrow = 2, ncol = 3,
top = textGrob("Golden State Warriors Shot Charts: 2016 Season"))
setwd("C:/Users/Fajnor/Desktop/workout01")
library(ggplot2)
library(dplyr)
library(jpeg)
library(grid)
# load data into enviornment
data <- read.csv("./data/shots-data.csv", stringsAsFactors = FALSE)
# Stephen Curry shot-chart
curry <- filter(data, name == "Stephen Curry")
# test plot
ggplot(data = curry, aes(x = x, y = y)) + geom_point(aes(x = x, y = y, color = shot_made_flag))
# court background image
court_file <- "./images/nba-court.jpg"
court_image <- rasterGrob(
readJPEG(court_file),
width = unit(1, "npc"),
height = unit(1, "npc"))
curry_shot_chart <- ggplot(data = curry) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Stephen Curry (2016 season)') +
theme_minimal()
curry_shot_chart
# Klay Thompson Shot Chart with background image
thompson <- filter(data, name == "Klay Thompson")
thompson_shot_chart <- ggplot(data = thompson) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Klay Thompson (2016 season)') +
theme_minimal()
thompson_shot_chart
# Andre Iguodala Shot Chart with background image
iguodala <- filter(data, name == "Andre Igoudala")
iguodala_shot_chart <- ggplot(data = iguodala) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Andre Iguodala (2016 season)') +
theme_minimal()
iguodala_shot_chart
# Draymond Green Shot Chart with background image
green <- filter(data, name == "Draymond Green")
green_shot_chart <- ggplot(data = green) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Draymond Green (2016 season)') +
theme_minimal()
green_shot_chart
# Kevin Durant Shot Chart with background image
durant <- filter(data, name == "Kevin Durant")
durant_shot_chart <- ggplot(data = durant) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Kevin Durant (2016 season)') +
theme_minimal()
durant_shot_chart
# make PDF's
pdf("./images/klay-thompson-shot-chart.pdf", height = 5, width = 6.5)
thompson_shot_chart
dev.off()
pdf("./images/stephan-curry-shot-chart.pdf", height = 5, width = 6.5)
curry_shot_chart
dev.off()
pdf("./images/kevin-durant-shot-chart.pdf", height = 5, width = 6.5)
durant_shot_chart
dev.off()
pdf("./images/draymond-greene-shot-chart.pdf", height = 5, width = 6.5)
green_shot_chart
dev.off()
pdf("./images/andre-iguodala-shot-chart.pdf", height = 5, width = 6.5)
iguodala_shot_chart
dev.off()
# Faceted Shot Chart
gsw_shot_chart <- ggplot(data = data) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Charts: Golden State Warriors (2016 season)') +
facet_grid(name ~ .) +
theme_minimal()
gsw_shot_chart
pdf("./images/gsw-shot-chart.pdf", height = 7, width = 8)
gsw_shot_chart
dev.off()
## OR
library(gridExtra)
gsw_shotcharts <- grid.arrange(curry_shot_chart,
thompson_shot_chart,
durant_shot_chart,
green_shot_chart,
iguodala_shot_chart,
nrow = 2, ncol = 3,
top = textGrob("Golden State Warriors Shot Charts: 2016 Season"))
pdf("./images/gsw-shotcharts.pdf", height = 7, width = 8)
gsw_shotcharts
dev.off()
png("./images/gsw-shot-chart.png", height = 7, width = 8)
gsw_shot_chart
dev.off()
png("./images/gsw-shotcharts.png", height = 7, width = 8)
gsw_shotcharts
dev.off()
png("./images/gsw-shot-chart.png", height = 7, width = 8)
gsw_shot_chart
dev.off()
png("./images/gsw-shot-chart.png", units = "inches", height = 7, width = 8)
gsw_shot_chart
dev.off()
View(nba)
png("./images/gsw-shot-chart.png", units = "in", height = 7, width = 8)
gsw_shot_chart
dev.off()
png("./images/gsw-shot-chart.png", res = 72, units = "in", height = 7, width = 8)
gsw_shot_chart
dev.off()
png("./images/gsw-shotcharts.png", units = "in", res = 72 height = 7, width = 8)
gsw_shotcharts
dev.off()
png("./images/gsw-shotcharts.png", units = "in", res = 72, height = 7, width = 8)
gsw_shotcharts
dev.off()
png("./images/gsw-shotcharts.png", res = 72, units = "in", height = 7, width = 8)
gsw_shotcharts
dev.off()
png("./images/gsw-shotchart.png", res = 72, units = "in", height = 7, width = 8)
gsw_shotcharts
dev.off()
png("./images/gsw-shot-chart2.png", res = 72, units = "in", height = 7, width = 8)
gsw_shot_chart
dev.off()
png("./images/gsw-shotchart.png", res = 72, units = "in", height = 7, width = 8)
gsw_shotcharts
dev.off()
png("./images/gsw-shotchart.png", res = 72, units = "in", height = 7, width = 8)
gsw_shotcharts
dev.off()
ggsave("./images/gsw-shotchart.png", plot = gsw_shotcharts, units = "in", height = 7, width = 8)
ggsave("./images/gsw-shotchart.png", plot = gsw_shotcharts, units = "in", height = 7, width = 8, scale = 4)
ggsave("./images/gsw-shotchart.png", plot = gsw_shotcharts, units = "in", height = 7, width = 8, scale = 3.)
setwd("C:/Users/Fajnor/Desktop/workout01")
read.csv("./data/shots-data.csv", headers = TRUE, stringsAsFactors = FALSE)
read.csv("./data/shots-data.csv", header = TRUE, stringsAsFactors = FALSE)
setwd("C:/Users/Fajnor/Desktop/workout01")
read.csv("./data/shots-data.csv", header = TRUE, stringsAsFactors = FALSE)
setwd("C:/Users/Fajnor/Desktop/workout01")
shot_data <- read.csv("./data/shots-data.csv", header = TRUE, stringsAsFactors = FALSE)
View(shot_data)
View(shot_data)
library(dyplr)
library(dpylr)
library(dplyr)
shot_data$made <- ifelse(shot_data$shot_made_flag == "shot_yes", 1, 0)
View(shot_data)
View(shot_data)
shot_data$taken <- ifelse(shot_data$shot_made_flag == "shot_yes", 1, 1)
View(shot_data)
View(shot_data)
shot_data %>% group_by(name) %>% summarize(sum(taken))
shot_data %>% group_by(name) %>% summarize(c(sum(taken), sum(made))
shot_data %>% group_by(name) %>% summarize(c(sum(taken), sum(made)))
shot_data %>% group_by(name) %>% summarize(sum(made)/sum(taken))
shot_data %>% group_by(name) %>% filter(shot_type == "2PT Field Goal") %>% summarize(sum(made)/sum(taken))
two_point_percent <- shot_data %>% group_by(name) %>% filter(shot_type == "2PT Field Goal") %>% summarize(sum(made)/sum(taken))
x <- c(sum(shot_data$made), sum(shot_data$taken), two_point_percent)
as.table(x)
View(x)
shot_data %>% select(c(name, taken, made)) %>% group_by(name)
two_point_percent <- shot_data %>% group_by(name) %>% filter(shot_type == "2PT Field Goal") %>% summarize(sum(total), sum(made), (sum(made)/sum(taken))*100)
two_point_percent <- shot_data %>% group_by(name) %>% filter(shot_type == "2PT Field Goal") %>% summarize(sum(taken), sum(made), (sum(made)/sum(taken))*100)
View(two_point_percent)
rename(two_point_percent, name, total_taken, total_made, effectice_percentage)
rename(two_point_percent, "name", 'total taken', 'total made', 'effectice percentage')
three_point_percent <- shot_data %>% group_by(name) %>% filter(shot_type == "3PT Field Goal") %>% summarize(sum(taken), sum(made), (sum(made)/sum(taken))*100)
total_point_percent <- shot_data %>% group_by(name) %>% filter(shot_type == "2PT Field Goal" | shot_type == "3PT Field Goal") %>% summarize(sum(taken), sum(made), (sum(made)/sum(taken))*100)
View(three_point_percent)
View(three_point_percent)
View(total_point_percent)
View(total_point_percent)
as.table(two_point_percent)
View(three_point_percent)
View(three_point_percent)
View(three_point_percent)
View(three_point_percent)
two_point_percent <- shot_data %>% group_by(name) %>% filter(shot_type == "2PT Field Goal") %>% summarize(total = sum(taken), made = sum(made), perc_made = (sum(made)/sum(taken))*100)
three_point_percent <- shot_data %>% group_by(name) %>% filter(shot_type == "3PT Field Goal") %>% summarize(total = sum(taken), made = sum(made), perc_made = (sum(made)/sum(taken))*100)
total_point_percent <- shot_data %>% group_by(name) %>% filter(shot_type == "2PT Field Goal" | shot_type == "3PT Field Goal") %>% summarize(total = sum(taken), made = sum(made), perc_made = (sum(made)/sum(taken))*100)
View(three_point_percent)
view(two_point_percent)
two_point_percent
three_point_percent
total_point_percent
